
// This file has been generated by the GUI designer. Do not modify.
using System.Reflection.Emit;

namespace Troonie
{
	public partial class OptionsWidget
	{
		private Gtk.ScrolledWindow scrolledwindow1;
		
		private Gtk.EventBox eventbox1;
		
		private Gtk.Notebook notebook1;
		
		private Gtk.EventBox eventboxPage1;
		
		private Gtk.Box vboxPage1;
		
		private Gtk.Frame frameAskForDesktopContextMenu;
		
		//private global::Gtk.Alignment AlignmentDesktopContextMenu;
		
		private Gtk.Box hboxDesktopContextMenu;
		
		private Gtk.CheckButton checkBtnDesktopContextMenu;
		
		private Gtk.Label lbFrameDesktopContextMenu;
		
		private Gtk.Frame frameVipSize;
		
		//private global::Gtk.Alignment AlignmentVipSize;
		
		private Gtk.Box hboxVipSize;
		
		private TroonieButton btnPlusVipSize;
		
		private Gtk.Entry entryVipSize;
		
		private TroonieButton btnMinusVipSize;
		
		private Gtk.Label lbVipSize;
		
		private Gtk.Frame frameMaxSideLengthFilterImage;
		
		//private global::Gtk.Alignment AlignmentMaxSideLengthFilterImage;
		
		private Gtk.Box hboxMaxSideLengthFilterImage;
		
		private TroonieButton btnPlusMaxSideLengthFilterImage;
		
		private Gtk.Entry entryMaxSideLengthFilterImage;
		
		private TroonieButton btnMinusMaxSideLengthFilterImage;
		
		private Gtk.Label lbMaxSideLengthFilterImage;
		
		private Gtk.Frame frameVideoplayer;
		
		//private global::Gtk.Alignment AlignmentVideoplayer;
		
		private Gtk.Box hboxVideoplayer;
		
		private HyperTextLabel hypertextlabelVideoplayer;
		
		private Gtk.Label lbFrameVideoplayer;
		
		private Gtk.Frame frameKeywordsXmlFile;
		
		//private global::Gtk.Alignment AlignmentKeywordsXmlFile;
		
		private Gtk.Box hboxKeywordsXmlFile;
		
		private HyperTextLabel hypertextlabelKeywordsXmlFile;
		
		private Gtk.Label lbFrameKeywordsXmlFile;
		
		private Gtk.Label lbPage1;
		
		private Gtk.EventBox eventboxPage2;
		
		private Gtk.Table table1;
		
		private Gtk.Label lbPage2;

		protected virtual void Build ()
		{
            Stetic.Gui.Initialize (this);
			// Widget Troonie.OptionsWidget
			Name = "Troonie.OptionsWidget";
			Title = ("OptionsWidget");
			WindowPosition = Gtk.WindowPosition.CenterOnParent;
			// Container child Troonie.OptionsWidget.Gtk.Container+ContainerChild
			scrolledwindow1 = new Gtk.ScrolledWindow ();
			scrolledwindow1.CanFocus = true;
			scrolledwindow1.Name = "scrolledwindow1";
			scrolledwindow1.ShadowType = ((Gtk.ShadowType)(3));
            // Container child scrolledwindow1.Gtk.Container+ContainerChild
            Gtk.Viewport w1 = new Gtk.Viewport ();
			w1.ShadowType = ((Gtk.ShadowType)(0));
			// Container child GtkViewport.Gtk.Container+ContainerChild
			eventbox1 = new Gtk.EventBox ();
			eventbox1.Name = "eventbox1";
			// Container child eventbox1.Gtk.Container+ContainerChild
			notebook1 = new Gtk.Notebook ();
			notebook1.CanFocus = true;
			notebook1.Name = "notebook1";
			notebook1.CurrentPage = 0;
			// Container child notebook1.Gtk.Notebook+NotebookChild
			eventboxPage1 = new Gtk.EventBox ();
			eventboxPage1.Name = "eventboxPage1";
			// Container child eventboxPage1.Gtk.Container+ContainerChild
			vboxPage1 = new Gtk.Box(Gtk.Orientation.Vertical, 0);
			vboxPage1.Name = "vboxPage1";            
            //this.vboxPage1.Spacing = 6;
            // Container child vboxPage1.Gtk.Box+BoxChild
            frameAskForDesktopContextMenu = new Gtk.Frame ();
			frameAskForDesktopContextMenu.Name = "frameAskForDesktopContextMenu";
			frameAskForDesktopContextMenu.ShadowType = ((Gtk.ShadowType)(0));
            // Container child frameAskForDesktopContextMenu.Gtk.Container+ContainerChild
   //         this.AlignmentDesktopContextMenu = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			//this.AlignmentDesktopContextMenu.Name = "AlignmentDesktopContextMenu";
			//this.AlignmentDesktopContextMenu.LeftPadding = ((uint)(12));
			// Container child AlignmentDesktopContextMenu.Gtk.Container+ContainerChild
			hboxDesktopContextMenu = new Gtk.Box (Gtk.Orientation.Horizontal, 0);
			hboxDesktopContextMenu.Name = "hboxDesktopContextMenu";
			//this.hboxDesktopContextMenu.Spacing = 6;
			//this.hboxDesktopContextMenu.WidthRequest = 100;
            // Container child hboxDesktopContextMenu.Gtk.Box+BoxChild
            checkBtnDesktopContextMenu = new Gtk.CheckButton ();
			checkBtnDesktopContextMenu.CanFocus = true;
			checkBtnDesktopContextMenu.Name = "checkBtnDesktopContextMenu";
			checkBtnDesktopContextMenu.Label = ("checkBtnDesktopContextMenu");
			checkBtnDesktopContextMenu.DrawIndicator = true;
			checkBtnDesktopContextMenu.UseUnderline = true;
			hboxDesktopContextMenu.Add (checkBtnDesktopContextMenu);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(hboxDesktopContextMenu [checkBtnDesktopContextMenu]));
			w2.Position = 0;
			//this.AlignmentDesktopContextMenu.Add (this.hboxDesktopContextMenu);
			frameAskForDesktopContextMenu.Add (hboxDesktopContextMenu);
			lbFrameDesktopContextMenu = new Gtk.Label ();
			lbFrameDesktopContextMenu.Name = "lbFrameDesktopContextMenu";
			lbFrameDesktopContextMenu.LabelProp = ("<b>lbKDesktopContextMenu</b>");
			lbFrameDesktopContextMenu.UseMarkup = true;
			frameAskForDesktopContextMenu.LabelWidget = lbFrameDesktopContextMenu;
			vboxPage1.Add (frameAskForDesktopContextMenu);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(vboxPage1 [frameAskForDesktopContextMenu]));
			w5.Position = 1;
			//w5.Expand = false;
			//w5.Fill = false;
			// Container child vboxPage1.Gtk.Box+BoxChild
			frameVipSize = new Gtk.Frame ();
			frameVipSize.Name = "frameVipSize";
			frameVipSize.ShadowType = ((Gtk.ShadowType)(0));
			// Container child frameVipSize.Gtk.Container+ContainerChild
			//this.AlignmentVipSize = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			//this.AlignmentVipSize.Name = "AlignmentVipSize";
			//this.AlignmentVipSize.LeftPadding = ((uint)(12));
			// Container child AlignmentVipSize.Gtk.Container+ContainerChild
			hboxVipSize = new Gtk.Box (Gtk.Orientation.Horizontal, 0);
			hboxVipSize.Name = "hboxVipSize";
            // Container child hboxVipSize.Gtk.Box+BoxChild
            btnPlusVipSize = new TroonieButton();
			btnPlusVipSize.Name = "btnPlusVipSize";
			btnPlusVipSize.CheckReleaseState = true;
			btnPlusVipSize.BorderlineWidth = 2;
			btnPlusVipSize.ButtonHeight = 35;
			btnPlusVipSize.ButtonWidth = 35;
			btnPlusVipSize.Font = "Arial";
			btnPlusVipSize.Text = "+";
			btnPlusVipSize.TextSize = 12D;
   //         btnPlusVipSize.Visible = true;
			//btnPlusVipSize.Redraw();
            hboxVipSize.Add (btnPlusVipSize);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(hboxVipSize [btnPlusVipSize]));
			w6.Position = 0;
			w6.Fill = true;
			//w6.Expand = true;

			//w6.PackType = Gtk.PackType.Start;
			// Container child hboxVipSize.Gtk.Box+BoxChild
			entryVipSize = new Gtk.Entry ();
			entryVipSize.CanFocus = true;
			entryVipSize.Name = "entryVipSize";
			entryVipSize.IsEditable = true;
			entryVipSize.InvisibleChar = '‚óè';
			hboxVipSize.Add (entryVipSize);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(hboxVipSize [entryVipSize]));
			w7.Position = 1;
			// Container child hboxVipSize.Gtk.Box+BoxChild
			btnMinusVipSize = new TroonieButton();
			btnMinusVipSize.Name = "btnMinusVipSize";
			btnMinusVipSize.CheckReleaseState = true;
			btnMinusVipSize.BorderlineWidth = 2;
			btnMinusVipSize.ButtonHeight = 35;
			btnMinusVipSize.ButtonWidth = 35;
			btnMinusVipSize.Font = "Arial";
			btnMinusVipSize.Text = "-";
			btnMinusVipSize.TextSize = 12D;
			hboxVipSize.Add (btnMinusVipSize);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(hboxVipSize [btnMinusVipSize]));
			w8.Position = 2;
            w8.Fill = true;
            //this.AlignmentVipSize.Add (this.hboxVipSize);
            frameVipSize.Add (hboxVipSize);
			lbVipSize = new Gtk.Label ();
			lbVipSize.Name = "lbVipSize";
			lbVipSize.LabelProp = ("<b>lbVipSize</b>");
			lbVipSize.UseMarkup = true;
			frameVipSize.LabelWidget = lbVipSize;
			vboxPage1.Add (frameVipSize);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(vboxPage1 [frameVipSize]));
			w11.Position = 2;
			//w11.Expand = false;
			//w11.Fill = false;
			// Container child vboxPage1.Gtk.Box+BoxChild
			frameMaxSideLengthFilterImage = new Gtk.Frame ();
			frameMaxSideLengthFilterImage.Name = "frameMaxSideLengthFilterImage";
			frameMaxSideLengthFilterImage.ShadowType = ((Gtk.ShadowType)(0));
			// Container child frameMaxSideLengthFilterImage.Gtk.Container+ContainerChild
			//this.AlignmentMaxSideLengthFilterImage = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			//this.AlignmentMaxSideLengthFilterImage.Name = "AlignmentMaxSideLengthFilterImage";
			//this.AlignmentMaxSideLengthFilterImage.LeftPadding = ((uint)(12));
			// Container child AlignmentMaxSideLengthFilterImage.Gtk.Container+ContainerChild
			hboxMaxSideLengthFilterImage = new Gtk.Box (Gtk.Orientation.Horizontal, 0);
			hboxMaxSideLengthFilterImage.Name = "hboxMaxSideLengthFilterImage";
			// Container child hboxMaxSideLengthFilterImage.Gtk.Box+BoxChild
			btnPlusMaxSideLengthFilterImage = new TroonieButton();
			btnPlusMaxSideLengthFilterImage.Name = "btnPlusMaxSideLengthFilterImage";
			btnPlusMaxSideLengthFilterImage.CheckReleaseState = true;
			btnPlusMaxSideLengthFilterImage.BorderlineWidth = 2;
			btnPlusMaxSideLengthFilterImage.ButtonHeight = 35;
			btnPlusMaxSideLengthFilterImage.ButtonWidth = 35;
			btnPlusMaxSideLengthFilterImage.Font = "Arial";
			btnPlusMaxSideLengthFilterImage.Text = "+";
			btnPlusMaxSideLengthFilterImage.TextSize = 12D;
			hboxMaxSideLengthFilterImage.Add (btnPlusMaxSideLengthFilterImage);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(hboxMaxSideLengthFilterImage [btnPlusMaxSideLengthFilterImage]));
			w12.Position = 0;
			w12.Fill = true;
			// Container child hboxMaxSideLengthFilterImage.Gtk.Box+BoxChild
			entryMaxSideLengthFilterImage = new Gtk.Entry ();
			entryMaxSideLengthFilterImage.CanFocus = true;
			entryMaxSideLengthFilterImage.Name = "entryMaxSideLengthFilterImage";
			entryMaxSideLengthFilterImage.IsEditable = true;
			entryMaxSideLengthFilterImage.InvisibleChar = '‚óè';
			hboxMaxSideLengthFilterImage.Add (entryMaxSideLengthFilterImage);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(hboxMaxSideLengthFilterImage [entryMaxSideLengthFilterImage]));
			w13.Position = 1;
			// Container child hboxMaxSideLengthFilterImage.Gtk.Box+BoxChild
			btnMinusMaxSideLengthFilterImage = new TroonieButton();
			btnMinusMaxSideLengthFilterImage.Name = "btnMinusMaxSideLengthFilterImage";
			btnMinusMaxSideLengthFilterImage.CheckReleaseState = true;
			btnMinusMaxSideLengthFilterImage.BorderlineWidth = 2;
			btnMinusMaxSideLengthFilterImage.ButtonHeight = 35;
			btnMinusMaxSideLengthFilterImage.ButtonWidth = 35;
			btnMinusMaxSideLengthFilterImage.Font = "Arial";
			btnMinusMaxSideLengthFilterImage.Text = "-";
			btnMinusMaxSideLengthFilterImage.TextSize = 12D;
			hboxMaxSideLengthFilterImage.Add (btnMinusMaxSideLengthFilterImage);
            Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(hboxMaxSideLengthFilterImage [btnMinusMaxSideLengthFilterImage]));
			w14.Position = 2;
            w14.Fill = true;
            //this.AlignmentMaxSideLengthFilterImage.Add (this.hboxMaxSideLengthFilterImage);
            frameMaxSideLengthFilterImage.Add (hboxMaxSideLengthFilterImage);
			lbMaxSideLengthFilterImage = new Gtk.Label ();
			lbMaxSideLengthFilterImage.Name = "lbMaxSideLengthFilterImage";
			lbMaxSideLengthFilterImage.LabelProp = ("<b>lbMaxSideLengthFilterImage</b>");
			lbMaxSideLengthFilterImage.UseMarkup = true;
			frameMaxSideLengthFilterImage.LabelWidget = lbMaxSideLengthFilterImage;
			vboxPage1.Add (frameMaxSideLengthFilterImage);
            Gtk.Box.BoxChild w17 = ((Gtk.Box.BoxChild)(vboxPage1 [frameMaxSideLengthFilterImage]));
			w17.Position = 3;
			w17.Expand = false;
			w17.Fill = false;
			// Container child vboxPage1.Gtk.Box+BoxChild
			frameVideoplayer = new Gtk.Frame ();
			frameVideoplayer.Name = "frameVideoplayer";
			frameVideoplayer.ShadowType = Gtk.ShadowType.None;
			// Container child frameVideoplayer.Gtk.Container+ContainerChild
			//this.AlignmentVideoplayer = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			//this.AlignmentVideoplayer.Name = "AlignmentVideoplayer";
			//this.AlignmentVideoplayer.LeftPadding = ((uint)(12));
			// Container child AlignmentVideoplayer.Gtk.Container+ContainerChild
			hboxVideoplayer = new Gtk.Box (Gtk.Orientation.Horizontal, 0);
			hboxVideoplayer.Name = "hboxVideoplayer";
            // Container child hboxVideoplayer.Gtk.Box+BoxChild
            hypertextlabelVideoplayer = new HyperTextLabel();
			hypertextlabelVideoplayer.Sensitive = false;
			hypertextlabelVideoplayer.Name = "hypertextlabelVideoplayer";
			hypertextlabelVideoplayer.Sensitive = false;
			hypertextlabelVideoplayer.Text = "Starttext";
			hypertextlabelVideoplayer.TextSize = 0;
			hypertextlabelVideoplayer.ShownTextLength = 0;
			hypertextlabelVideoplayer.Underline = false;
			hypertextlabelVideoplayer.Bold = false;
			hypertextlabelVideoplayer.Italic = false;
			hboxVideoplayer.Add (hypertextlabelVideoplayer);

            Gtk.Box.BoxChild w18 = ((Gtk.Box.BoxChild)(hboxVideoplayer [hypertextlabelVideoplayer]));
			w18.Position = 0;
			w18.Fill = true;
			w18.Expand = true;
			w18.Padding = 10;
			//this.AlignmentVideoplayer.Add (this.hboxVideoplayer);
			frameVideoplayer.Add (hboxVideoplayer);
			lbFrameVideoplayer = new Gtk.Label ();
			lbFrameVideoplayer.Name = "lbFrameVideoplayer";
			lbFrameVideoplayer.LabelProp = ("<b>lbFrameVideoplayer</b>");
			lbFrameVideoplayer.UseMarkup = true;
			frameVideoplayer.LabelWidget = lbFrameVideoplayer;
			vboxPage1.Add (frameVideoplayer);
            Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(vboxPage1 [frameVideoplayer]));
			w21.Position = 4;
            // Container child vboxPage1.Gtk.Box+BoxChild
            frameKeywordsXmlFile = new Gtk.Frame ();
			frameKeywordsXmlFile.Name = "frameKeywordsXmlFile";
			frameKeywordsXmlFile.ShadowType = Gtk.ShadowType.None;
			// Container child frameKeywordsXmlFile.Gtk.Container+ContainerChild
			//this.AlignmentKeywordsXmlFile = new global::Gtk.Alignment (0F, 0F, 1F, 1F);
			//this.AlignmentKeywordsXmlFile.Name = "AlignmentKeywordsXmlFile";
			//this.AlignmentKeywordsXmlFile.LeftPadding = ((uint)(12));
			// Container child AlignmentKeywordsXmlFile.Gtk.Container+ContainerChild
			hboxKeywordsXmlFile = new Gtk.Box (Gtk.Orientation.Horizontal, 0);
			hboxKeywordsXmlFile.Name = "hboxKeywordsXmlFile";
            // Container child hboxKeywordsXmlFile.Gtk.Box+BoxChild
            hypertextlabelKeywordsXmlFile = new HyperTextLabel();
			hypertextlabelKeywordsXmlFile.Sensitive = false;
			hypertextlabelKeywordsXmlFile.Name = "hypertextlabelKeywordsXmlFile";
			hypertextlabelKeywordsXmlFile.Text = "Starttext";
			hypertextlabelKeywordsXmlFile.TextSize = 0;
			hypertextlabelKeywordsXmlFile.ShownTextLength = 0;
			hypertextlabelKeywordsXmlFile.Underline = false;
			hypertextlabelKeywordsXmlFile.Bold = false;
			hypertextlabelKeywordsXmlFile.Italic = false;
			hboxKeywordsXmlFile.Add (hypertextlabelKeywordsXmlFile);
            Gtk.Box.BoxChild w22 = ((Gtk.Box.BoxChild)(hboxKeywordsXmlFile[hypertextlabelKeywordsXmlFile]));
			w22.Position = 0;
			w22.Fill = true;
			w22.Expand = true;
			w22.Padding = 10;
			//this.AlignmentKeywordsXmlFile.Add (this.hboxKeywordsXmlFile);
			frameKeywordsXmlFile.Add (hboxKeywordsXmlFile/*AlignmentKeywordsXmlFile*/);
			lbFrameKeywordsXmlFile = new Gtk.Label ();
			lbFrameKeywordsXmlFile.Name = "lbFrameKeywordsXmlFile";
			lbFrameKeywordsXmlFile.LabelProp = ("<b>lbKeywordsXmlFile</b>");
			lbFrameKeywordsXmlFile.UseMarkup = true;
			frameKeywordsXmlFile.LabelWidget = lbFrameKeywordsXmlFile;
			vboxPage1.Add (frameKeywordsXmlFile);
            Gtk.Box.BoxChild w25 = ((Gtk.Box.BoxChild)(vboxPage1 [frameKeywordsXmlFile]));
			w25.Position = 5;
			//w25.Expand = true;
			//w25.Fill = true;
			//Gtk.Label lbDummy = new Gtk.Label("Dummy");
   //         this.vboxPage1.Add(lbDummy);
            eventboxPage1.Add (vboxPage1);
			notebook1.Add (eventboxPage1);
            // Notebook tab
            lbPage1 = new Gtk.Label ();
			lbPage1.Name = "lbPage1";
			lbPage1.LabelProp = ("lbPage1");
			notebook1.SetTabLabel (eventboxPage1, lbPage1);
			lbPage1.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			eventboxPage2 = new Gtk.EventBox ();
			eventboxPage2.Name = "eventboxPage2";
			// Container child eventboxPage2.Gtk.Container+ContainerChild
			table1 = new Gtk.Table (((uint)(3)), ((uint)(3)), false);
			table1.Name = "table1";
			table1.RowSpacing = ((uint)(6));
			table1.ColumnSpacing = ((uint)(6));
			eventboxPage2.Add (table1);
			notebook1.Add (eventboxPage2);
            Gtk.Notebook.NotebookChild w29 = ((Gtk.Notebook.NotebookChild)(notebook1 [eventboxPage2]));
			w29.Position = 1;
			// Notebook tab
			lbPage2 = new Gtk.Label ();
			lbPage2.Name = "lbPage2";
			lbPage2.LabelProp = ("lbPage2");
			notebook1.SetTabLabel (eventboxPage2, lbPage2);
			lbPage2.ShowAll ();
			eventbox1.Add (notebook1);
			w1.Add (eventbox1);
			scrolledwindow1.Add (w1);
			Add (scrolledwindow1);
			if ((Child != null)) {
				Child.ShowAll ();
			}
			DefaultWidth = 500;
			DefaultHeight = 900;
			Show ();
			DeleteEvent += new Gtk.DeleteEventHandler (OnDeleteEvent);
			checkBtnDesktopContextMenu.Toggled += new System.EventHandler (OnCheckBtnDesktopContextMenuToggled);
			btnPlusVipSize.ButtonReleaseEvent += new Gtk.ButtonReleaseEventHandler (OnButtonReleaseEvent);
			btnPlusVipSize.ButtonPressEvent += new Gtk.ButtonPressEventHandler (OnBtnVipSizePressEvent);
			entryVipSize.KeyReleaseEvent += new Gtk.KeyReleaseEventHandler (OnEntryVipSizeKeyReleaseEvent);
			btnMinusVipSize.ButtonReleaseEvent += new Gtk.ButtonReleaseEventHandler (OnButtonReleaseEvent);
			btnMinusVipSize.ButtonPressEvent += new Gtk.ButtonPressEventHandler (OnBtnVipSizePressEvent);
			btnPlusMaxSideLengthFilterImage.ButtonReleaseEvent += new Gtk.ButtonReleaseEventHandler (OnButtonReleaseEvent);
			btnPlusMaxSideLengthFilterImage.ButtonPressEvent += new Gtk.ButtonPressEventHandler (OnBtnMaxSideLengthFilterImagePressEvent);
			entryMaxSideLengthFilterImage.KeyReleaseEvent += new Gtk.KeyReleaseEventHandler (OnEntryMaxSideLengthFilterImageKeyReleaseEvent);
			btnMinusMaxSideLengthFilterImage.ButtonReleaseEvent += new Gtk.ButtonReleaseEventHandler (OnButtonReleaseEvent);
			btnMinusMaxSideLengthFilterImage.ButtonPressEvent += new Gtk.ButtonPressEventHandler (OnBtnMaxSideLengthFilterImagePressEvent);
		}
	}
}
